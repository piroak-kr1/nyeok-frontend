name: Continuous Integration

on:
  workflow_dispatch:
  # push:
  #   branches: [ "fe-test" ]
  # pull_request:
  #   branches: [ "fe-test" ]

# NOTE: gradlew --no-daemon and gradlew stop for actions/cache work (#454)

jobs:
  run-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [29]

    steps:
    #region setup
    - uses: actions/checkout@v4.1.7

    - name: Create .secret.properties file
      run:
        echo "${{ env.secret_file }}" > "${{ env.save_path }}"
      env:
        secret_file: ${{ secrets.FILE_SECRET_PROPERTIES }}
        save_path: '.secret.properties'
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Set up JDK 17 # Gradle 8 requires java 17
      uses: actions/setup-java@v4.2.2
      with:
        java-version: '17'
        distribution: 'temurin'
        # cache: 'gradle' # Not working well
    
    - name: Gradle cache
      uses: gradle/actions/setup-gradle@v3
    #endregion setup


    - name: Run Android Lint
      run: ./gradlew lint --no-daemon

    # TODO: detekt
      
    - name: Run Local Unit Test
      run: ./gradlew test --no-daemon
      

    #region Instrumented Unit Test
    - name: Enable KVM # Hardware acceleration for linux runner
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm

    - name: AVD cache
      uses: actions/cache@v4
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-${{ matrix.api-level }}

    - name: create AVD and generate snapshot for caching
      if: steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.api-level }}
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: false
        script: echo "Generated AVD snapshot for caching."

    - name: Run Instrumented Unit Test
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.api-level }}
        force-avd-creation: false
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: ./gradlew connectedCheck --no-daemon
    #endregion Instrumented Unit Test

    
    # Test Coverage

    # Dependency Analysis Check

    
    - name: Read file contents
      id: read_file
      uses: andstor/file-reader-action@v1
      with:
        path: "/home/runner/work/nyeok-frontend/nyeok-frontend/app/build/outputs/androidTest-results/connected/debug/TEST-TestRunner-_app-.xml"
        if: ${{ always() }} # Even if previous steps failed

    - name: File contents
      run: echo "${ steps.read_file.outputs.contents }"
      if: ${{ always() }} # Even if previous steps failed

    # Report
    - name: Report
      uses: FlickerSoul/android-test-report-actions@v1.3.1
    # - name: Android Test Report
    #   uses: asadmansr/android-test-report-action@v1.2.0
      if: ${{ always() }} # Even if previous steps failed

    - name: Stop Gradle
      run: ./gradlew --stop
      if: ${{ always() }} # Even if previous steps failed
    
